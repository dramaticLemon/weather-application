services:
  postgres-service:
    image: postgres:16
    container_name: postgres-container
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "${POSTGRES_PORT}:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - weather-app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5

  pgadmin-service:
    image: dpage/pgadmin4
    container_name: pgadmin-container
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    ports:
      - "${PGADMIN_PORT}:80"
    depends_on:
      - postgres-service
    networks:
      - weather-app-network

  redis-service:
    image: redis:7
    container_name: redis-container
    ports:
      - "${REDIS_PORT}:6379"
    networks:
      - weather-app-network

  app-service:
    build: .
    container_name: application-container
    ports:
      - "${APP_PORT}:8080"
    depends_on:
      - postgres-service
    networks:
      - weather-app-network

  flyway-migration-service:
    image: flyway/flyway:11.10.3
    container_name: flyway-container
    volumes:
      - ./flyway-conf:/flyway/conf
      - ./db/migrations:/flyway/sql/db/migration
    networks:
      - weather-app-network
    depends_on:
      postgres-service:
        condition: service_healthy

volumes:
  pgdata:

networks:
  weather-app-network:
    driver: bridge
